name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
#        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3

#    - name: Install gcc9
#      shell: bash
#      run: |
#        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
#        sudo apt-get -q update
#        sudo apt-get -y install gcc-9
#        sudo apt-get -y install g++-9
#        sudo apt-get -y install doxygen
#        source ~/.profile

    - name: Install conan
      shell: bash
      run: |
        python3 -m pip install --upgrade pip setuptools
        python3 -m pip install conan
        source ~/.profile

#    - name: Install libtbb
#      shell: bash
#      env:
#        CC: gcc-9
#        CXX: g++-9
#      run: |
#        sudo add-apt-repository -y ppa:nnstreamer/ppa
#        sudo apt-get -q update
#        sudo apt-get -y install libtbb-dev
#        source ~/.profile

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
#      env:
#        CC: gcc-9
#        CXX: g++-9
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      # 
      # We need to source the profile file to make sure conan is in PATH
      run: |
        source ~/.profile
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        cmake -D ENABLE_COVERAGE:BOOL=TRUE .
        cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
